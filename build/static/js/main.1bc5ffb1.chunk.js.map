{"version":3,"sources":["Views/Home.js","Views/ContactUs.js","actions/types.js","Views/TestItem.js","actions/test.js","Views/Tests.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","Views/LogIn.js","Views/SignUp.js","Views/ForgotPass.js","Views/Alert.js","Views/Navbar.js","reducers/alert.js","reducers/auth.js","reducers/test.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","id","className","Component","ContactUs","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_TESTS","TEST_ERROR","DELETE_TEST","TestItem","auth","deleteTest","test","_id","title","result","comments","user","date","location","onClick","defaultProps","showActions","connect","state","dispatch","a","axios","delete","window","reload","type","payload","msg","response","statusText","status","getTests","get","res","data","tests","loading","useEffect","map","setAlert","alertType","timeout","uuidv4","setTimeout","setAuthToken","token","defaults","headers","common","loadUser","localStorage","isAuthenticated","login","email","password","console","log","config","body","JSON","stringify","post","errors","forEach","error","useState","contact","setContact","update","e","target","name","value","onSubmit","preventDefault","to","onChange","placeholder","href","register","password2","required","minLength","ForgotPass","event","prevData","alerts","alert","logout","authLinks","guestLinks","initialState","getItem","combineReducers","action","filter","setItem","removeItem","posts","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Tests","LogIn","SignUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bc5ffb1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Home extends Component {\n\n  render() {\n    return (\n      <div id=\"home\">\n\n        <div className=\"heading\">\n            <h1>Fusarium Test</h1>\n        </div>\n\n        <div className=\"body\">\n            <h2>Are you plants slowly dying?</h2>\n            <p>If you suspect they might be infected with the Fusarium fungus, then you have come to the right place!</p>\n            <p>With our innovative technology we will help you diagnose your plants with a simple and quick test.</p>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\n\nclass ContactUs extends Component {\n\n  render() {\n      return (\n          <div id=\"contact\">\n\n            <div className=\"heading\">\n                <h1>Contact Us</h1>\n            </div>\n\n            <div className=\"body\">\n                <h2>Do you have any questions?</h2>\n                <p>If so, you can contact us at:</p>\n                <p>marta.masramon@gmail.com</p>\n            </div>\n\n        </div>\n      );\n  }\n}\n\nexport default ContactUs;\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_TESTS = 'GET_TESTS';\nexport const TEST_ERROR = 'TEST_ERROR';\nexport const DELETE_TEST = 'DELETE_TEST';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteTest } from '../actions/test';\n\n// Make returned html pretty!\nconst TestItem = ({\n  auth,\n  deleteTest,\n  test: { _id, title, result, user, comments, date, location },\n}) => (\n  <div>\n    <h2>{title}</h2>\n    <p>{result}</p>\n    <p>Tested on {date}, at {location}</p>\n    <p>{comments}</p>\n    <button onClick={() => deleteTest(_id)}>Delete</button>\n  </div>\n);\n\nTestItem.defaultProps = {\n  showActions: true\n};\n\nTestItem.propTypes = {\n  test: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteTest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {deleteTest})(TestItem);\n","import axios from 'axios';\n//import { setAlert } from './alert';\nimport {\n  GET_TESTS,\n  TEST_ERROR,\n  DELETE_TEST,\n} from './types';\n\n// Get tests\nexport const getTests = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/test');\n\n    dispatch({\n      type: GET_TESTS,\n      payload: res.data\n    });\n\n  } catch (err) {\n    dispatch({\n      type: TEST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete test\nexport const deleteTest = id => async dispatch => {\n  try {\n    await axios.delete(`/api/test/${id}`);\n    await window.location.reload(false);\n\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n\n    //dispatch(setAlert('Test Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: TEST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TestItem from './TestItem';\nimport { connect } from 'react-redux';\nimport { getTests } from '../actions/test';\n\nconst Tests = ({ getTests, test:{tests, loading} }) => {\n  useEffect(() => {\n    getTests();\n  }, [getTests]);\n\n  // Change h1 to spinner\n  return loading ? (<h1>Loading</h1>) : (\n    <Fragment>\n      <h1>Test Result History</h1>\n\n      <div className=\"tests\">\n      {tests.map((test) => (  <TestItem key={test._id} test={test} /> ))}\n      </div>\n    </Fragment>\n  );\n};\n\nTests.propTypes = {\n  getTests: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  test: state.test\n});\n\nexport default connect(mapStateToProps, { getTests })(Tests);\n","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\n  export const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuidv4(); // Get universal id\n  dispatch({\n    type: SET_ALERT,\n    // Giving an alert type to tap into css classes to customise appearance\n    // i.e. different colours for different message types\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from './types';\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token){\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  console.log(\"Inside auth.js - register\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/user\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n\n  } catch (e) {\n    const errors = e.response.data.errors;\n\n    if(errors){\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n\n};\n\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  console.log(\"Inside auth.js - register\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n\n  } catch (e) {\n    const errors = e.response.data.errors;\n\n    if(errors){\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n\n};\n\n\n// Logout\nexport const logout = () => dispatch => {\n  dispatch({type: LOGOUT});\n};\n","import React, {useState} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst LogIn = ({ login, isAuthenticated }) => {\n    const [contact, setContact] = useState({\n      email: \"\",\n      password: \"\",\n    });\n\n    const { email, password } = contact;\n\n    const update = (e) => setContact({\n      ...contact,[e.target.name]:e.target.value\n    });\n\n    const onSubmit = async (e) => {\n      e.preventDefault();\n      login(email, password)\n    };\n\n    // redirect if logged in\n    if (isAuthenticated){\n      return <Redirect to = \"/\" />;\n    }\n\n    return (\n        <div>\n          <h1>Let's get you signed in!</h1>\n\n          <form onSubmit={onSubmit}>\n            <input\n              onChange={update}\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n            />\n            <input\n              onChange={update}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n            />\n            <input type=\"submit\" value=\"Log in\" />\n          </form>\n\n          <p><a href=\"/forgotpass\">Forgot password</a></p>\n          <p>Don't have an account? <a href=\"/signup\">Sign Up</a></p>\n        </div>\n\n    );\n};\n\nLogIn.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  login: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login }) (LogIn);\n","import React, {useState} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst SignUp = ({setAlert, register, isAuthenticated }) => {\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  const { name, email, password, password2 } = contact;\n\n  const update = (e) => setContact({\n    ...contact,[e.target.name]:e.target.value\n  });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if(password !== password2){\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else{\n      register({ name, email, password });\n    }\n  };\n\n  // redirect when logged in\n  if (isAuthenticated){\n    return <Redirect to = \"/\" />;\n  }\n\n  return (\n      <div>\n\n        <h1>Fill in with your details to make an account</h1>\n\n        <form onSubmit={onSubmit}>\n          <input\n            onChange={update}\n            name=\"name\"\n            placeholder=\"Full name\"\n            value={name}\n            required\n          />\n          <input\n            onChange={update}\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            required\n          />\n          <input\n            type=\"password\"\n            onChange={update}\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            minLength='6'\n            required\n          />\n          <input\n          type=\"password\"\n            onChange={update}\n            name=\"password2\"\n            placeholder=\"Confirm password\"\n            value={password2}\n            minLength='6'\n            required\n          />\n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <p>Already have an account? <a href=\"/login\">Log in</a></p>\n      </div>\n\n  );\n\n};\n\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register:  PropTypes.func.isRequired,\n  isAuthenticated:  PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {setAlert, register})(SignUp);\n","import React, {useState} from \"react\";\n\nfunction ForgotPass() {\n    const [contact, setContact] = useState({\n      email: \"\",\n    });\n\n    function update(event) {\n      const { name, value } = event.target;\n      setContact((prevData) => {\n        return {email: value};\n      });\n    }\n\n    return (\n        <div>\n          <h1>Don't worry!</h1>\n          <p>Just give us your email and we'll send you a link to reset your password!</p>\n\n          <form>\n            <div>\n              <input\n                onChange={update}\n                name=\"email\"\n                placeholder=\"Email\"\n                value={contact.email}\n              />\n            </div>\n            <button>Reset password</button>\n          </form>\n\n\n          <p>Just remembered your password?<a href=\"/login\">Log in</a></p>\n          <p>Don't have an account? <a href=\"/signup\">Sign Up</a></p>\n        </div>\n\n    );\n\n}\n\nexport default ForgotPass;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts.map((alert) => (\n    // This is the link to the different CSS classes\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  // Add class to change login to logout\n  const authLinks = (\n    <ul className=\"nav navbar-nav navbar-right\">\n      <li id=\"home\"><a href=\"/\">HOME</a></li>\n      <li id=\"contact\"><a href=\"/contact\">CONTACT US</a></li>\n      <li id=\"tests\"><a href=\"/tests\">RESULT HISTORY</a></li>\n      <li id=\"logout\"><a onClick={logout} href=\"/\">LOG OUT</a></li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul className=\"nav navbar-nav navbar-right\">\n      <li id=\"home\"><a href=\"/\">HOME</a></li>\n      <li id=\"contact\"><a href=\"/contact\">CONTACT US</a></li>\n      <li id=\"login\"><a href=\"/login\">LOG IN</a></li>\n    </ul>\n  );\n\n  return (\n    <nav className=\"navbar navbar-default\">\n      <div className=\"container\">\n        <div className=\"navbar-header\">\n          <p className=\"navbar-brand\">Crescentech</p>\n        </div>\n        {!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\n      </div>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function alert(state = initialState, action) {\n  const { type, payload } = action;\n  console.log(\"alert with type:\",type, \"and payload:\",payload);\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n}\n\n\nexport default function funct(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_TESTS,\n  DELETE_TEST,\n  TEST_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  tests: [],\n  test: null,\n  loading: true,\n  error: {}\n}\n\nexport default function fn(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_TESTS:\n      return {\n        ...state,\n        tests: payload,\n        loading: false\n      };\n    case DELETE_TEST:\n      return {\n        ...state,\n        posts: state.tests.filter(test => test._id !== payload),\n        loading: false\n      };\n    case TEST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport test from './test';\n\nexport default combineReducers({\n  alert,\n  auth,\n  test\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Home from \"./Views/Home\";\nimport ContactUs from \"./Views/ContactUs\";\nimport Tests from \"./Views/Tests\";\nimport LogIn from \"./Views/LogIn\";\nimport SignUp from \"./Views/SignUp\";\nimport ForgotPass from \"./Views/ForgotPass\";\nimport Alert from \"./Views/Alert\";\nimport Navbar from \"./Views/Navbar\";\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif (localStorage.token){\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(()=>{\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Home}/>\n          <section>\n            <Alert/>\n            <Switch>\n              <Route exact path=\"/contact\" component={ContactUs} />\n              <Route exact path=\"/tests\" component={Tests} />\n              <Route exact path=\"/login\" component={LogIn} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <Route exact path=\"/forgotpass\" component={ForgotPass} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}