{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Tests/Tests.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TestItem from './TestItem';\nimport MyMap from './Map';\nimport { connect } from 'react-redux';\nimport { getTests } from '../../actions/test';\nimport './tests.css'; // TO-DO\n// Get location from phone as lat vs lng\n\nconst Tests = ({\n  getTests,\n  test: {\n    tests,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getTests();\n  }, [getTests]);\n  const testLocations = [];\n  const lat = [];\n  const lng = [];\n  tests.forEach(test => {\n    let testColour = \"White\";\n    if (test.result === \"Positive\") testColour = \"Green\";else if (test.result === \"Negative\") testColour = \"Red\";\n    testLocations.push({\n      colour: testColour,\n      coordinates: {\n        lat: test.lat,\n        lng: test.lng\n      }\n    });\n    lat.push(test.lat);\n    lng.push(test.lng);\n  }); // Change h1 to spinner\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tests\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Result History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyMap, {\n      center: center,\n      locs: testLocations,\n      zoomLevel: 18\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), tests.map(test => /*#__PURE__*/_jsxDEV(TestItem, {\n      test: test\n    }, test._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Tests, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Tests;\nTests.propTypes = {\n  getTests: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  test: state.test\n});\n\nexport default connect(mapStateToProps, {\n  getTests\n})(Tests);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"sources":["/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Tests/Tests.js"],"names":["React","useEffect","PropTypes","TestItem","MyMap","connect","getTests","Tests","test","tests","loading","testLocations","lat","lng","forEach","testColour","result","push","colour","coordinates","center","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,aAAP,C,CAEA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAjB,CAAD,KAAyC;AAAA;;AACrDT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,QAAMK,aAAa,GAAG,EAAtB;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAG,EAAZ;AAEAJ,EAAAA,KAAK,CAACK,OAAN,CAAeN,IAAD,IAAU;AACtB,QAAIO,UAAU,GAAG,OAAjB;AACA,QAAIP,IAAI,CAACQ,MAAL,KAAgB,UAApB,EAAgCD,UAAU,GAAG,OAAb,CAAhC,KACK,IAAIP,IAAI,CAACQ,MAAL,KAAgB,UAApB,EAAgCD,UAAU,GAAG,KAAb;AAErCJ,IAAAA,aAAa,CAACM,IAAd,CAAmB;AACjBC,MAAAA,MAAM,EAAEH,UADS;AAEjBI,MAAAA,WAAW,EAAE;AACXP,QAAAA,GAAG,EAAEJ,IAAI,CAACI,GADC;AAEXC,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFC;AAFI,KAAnB;AAQAD,IAAAA,GAAG,CAACK,IAAJ,CAAST,IAAI,CAACI,GAAd;AACAC,IAAAA,GAAG,CAACI,IAAJ,CAAST,IAAI,CAACK,GAAd;AAGD,GAjBD,EATqD,CA4BrD;;AACA,SAAQH,OAAO,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ,gBACX;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEU,MAAf;AAAuB,MAAA,IAAI,EAAET,aAA7B;AAA4C,MAAA,SAAS,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,KAAK,CAACY,GAAN,CAAWb,IAAD,iBAAa,QAAC,QAAD;AAAyB,MAAA,IAAI,EAAEA;AAA/B,OAAeA,IAAI,CAACc,GAApB;AAAA;AAAA;AAAA;AAAA,YAAvB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CApCD;;GAAMf,K;;KAAAA,K;AAsCNA,KAAK,CAACgB,SAAN,GAAkB;AAChBjB,EAAAA,QAAQ,EAAEJ,SAAS,CAACsB,IAAV,CAAeC,UADT;AAEhBjB,EAAAA,IAAI,EAAEN,SAAS,CAACwB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCpB,EAAAA,IAAI,EAAEoB,KAAK,CAACpB;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TestItem from './TestItem';\nimport MyMap from './Map';\nimport { connect } from 'react-redux';\nimport { getTests } from '../../actions/test';\nimport './tests.css';\n\n// TO-DO\n// Get location from phone as lat vs lng\n\nconst Tests = ({ getTests, test:{tests, loading} }) => {\n  useEffect(() => {\n    getTests();\n  }, [getTests]);\n\n  const testLocations = [];\n  const lat = [];\n  const lng = [];\n\n  tests.forEach((test) => {\n    let testColour = \"White\";\n    if (test.result === \"Positive\") testColour = \"Green\";\n    else if (test.result === \"Negative\") testColour = \"Red\";\n\n    testLocations.push({\n      colour: testColour,\n      coordinates: {\n        lat: test.lat,\n        lng: test.lng\n      }\n    });\n\n    lat.push(test.lat);\n    lng.push(test.lng);\n\n\n  });\n\n  // Change h1 to spinner\n  return (loading ? (<h1>Loading</h1>) : (\n      <div className=\"tests\">\n        <h1>Test Result History</h1>\n        <MyMap center={center} locs={testLocations} zoomLevel={18} />\n        {tests.map((test) => (  <TestItem key={test._id} test={test} /> ))}\n      </div>\n  ));\n};\n\nTests.propTypes = {\n  getTests: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  test: state.test\n});\n\nexport default connect(mapStateToProps, { getTests })(Tests);\n"]},"metadata":{},"sourceType":"module"}