{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Help/TextCard.jsx\";\nimport React, { Component } from \"react\";\nimport './Help.css';\n\nclass TextCard extends Component {\n  render() {\n    const numb = this.props.number;\n    const nums = [false, false, false, false];\n    if (numb === 0) nums[0] = true;else if (numb === 1) nums[1] = true;else if (numb === 2) nums[2] = true;else if (numb === 3) nums[3] = true;\n\n    const text1 = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body card-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Divide your field into grids using the field map tool. Start sampling at grid 1,1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n\n    const text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body card-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Divide your field into grids using the field map tool. Start sampling at grid 1,1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n\n    const text3 = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body card-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Divide your field into grids using the field map tool. Start sampling at grid 1,1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n\n    const text4 = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body card-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Divide your field into grids using the field map tool. Start sampling at grid 1,1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text card-right\",\n        children: \"Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [nums[0] && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Banana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), nums[1] && text2, numb === 2 && text3, numb === 3 && text4]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TextCard;","map":{"version":3,"sources":["/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Help/TextCard.jsx"],"names":["React","Component","TextCard","render","numb","props","number","nums","text1","text2","text3","text4"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE/BE,EAAAA,MAAM,GAAG;AAEP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,MAAxB;AACA,UAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAb;AAEA,QAAIH,IAAI,KAAK,CAAb,EAAgBG,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,CAAhB,KACK,IAAIH,IAAI,KAAK,CAAb,EAAgBG,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,CAAhB,KACA,IAAIH,IAAI,KAAK,CAAb,EAAgBG,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,CAAhB,KACA,IAAIH,IAAI,KAAK,CAAb,EAAgBG,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV;;AAErB,UAAMC,KAAK,gBACT;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,UAAMC,KAAK,gBACT;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,UAAMC,KAAK,gBACT;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,UAAMC,KAAK,gBACT;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AASA,wBACE;AAAA,iBACGJ,IAAI,CAAC,CAAD,CAAJ,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,EAEGA,IAAI,CAAC,CAAD,CAAJ,IAAWE,KAFd,EAGGL,IAAI,KAAK,CAAT,IAAcM,KAHjB,EAIGN,IAAI,KAAK,CAAT,IAAcO,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAtD8B;;AAyDjC,eAAeT,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport './Help.css';\n\nclass TextCard extends Component {\n\n  render (){\n\n    const numb = this.props.number;\n    const nums = [false, false, false, false];\n\n    if (numb === 0) nums[0] = true;\n    else if (numb === 1) nums[1] = true;\n    else if (numb === 2) nums[2] = true;\n    else if (numb === 3) nums[3] = true;\n\n    const text1 = (\n      <div class=\"card-body card-step\">\n        <p class=\"card-text card-right\">Divide your field into grids using the field map tool. Start sampling at grid 1,1.</p>\n        <p class=\"card-text card-right\">Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.</p>\n        <p class=\"card-text card-right\">Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.</p>\n      </div>\n    );\n\n    const text2 = (\n      <div class=\"card-body card-step\">\n        <p class=\"card-text card-right\">Divide your field into grids using the field map tool. Start sampling at grid 1,1.</p>\n        <p class=\"card-text card-right\">Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.</p>\n        <p class=\"card-text card-right\">Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.</p>\n      </div>\n    );\n\n    const text3 = (\n      <div class=\"card-body card-step\">\n        <p class=\"card-text card-right\">Divide your field into grids using the field map tool. Start sampling at grid 1,1.</p>\n        <p class=\"card-text card-right\">Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.</p>\n        <p class=\"card-text card-right\">Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.</p>\n      </div>\n    );\n\n    const text4 = (\n      <div class=\"card-body card-step\">\n        <p class=\"card-text card-right\">Divide your field into grids using the field map tool. Start sampling at grid 1,1.</p>\n        <p class=\"card-text card-right\">Remove large debris at sample size. Using a soil core sampler or a spade, dig approximately 20m down. Obtain sufficient soil to mic in a flask.</p>\n        <p class=\"card-text card-right\">Continue to systematically sample at each grid site and form composites. Approximately 5 sites can form 1 composite. Fill up to soil maximum fill-line.</p>\n      </div>\n    );\n\n\n    return(\n      <div>\n        {nums[0] && <p>Banana</p>}\n        {nums[1] && text2}\n        {numb === 2 && text3}\n        {numb === 3 && text4}\n      </div>\n    );\n\n  }\n}\n\nexport default TextCard;\n"]},"metadata":{},"sourceType":"module"}