{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martamasramon/Desktop/Crescentech/client/src/Views/TestItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteTest } from '../actions/test'; // Make returned html pretty!\n\nconst TestItem = ({\n  auth,\n  test: {\n    _id,\n    title,\n    result,\n    user,\n    comments,\n    date,\n    location\n  }\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Tested on \", date, \", at \", location]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), comments.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: comments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 30\n  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"/\",\n    onClick: deleteTest,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = TestItem;\nTestItem.defaultProps = {\n  showActions: true\n};\nTestItem.propTypes = {\n  test: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(TestItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"TestItem\");","map":{"version":3,"sources":["/Users/martamasramon/Desktop/Crescentech/client/src/Views/TestItem.js"],"names":["React","Fragment","PropTypes","Moment","connect","deleteTest","TestItem","auth","test","_id","title","result","user","comments","date","location","length","defaultProps","showActions","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,IAAtC;AAA4CC,IAAAA;AAA5C;AAFU,CAAD,kBAIf;AAAA,0BACE;AAAA,cAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,6BAAcG,IAAd,WAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIGF,QAAQ,CAACG,MAAT,GAAkB,CAAlB,iBAAwB;AAAA,cAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,UAJ3B,eAKE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAER,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF;;KAAMC,Q;AAaNA,QAAQ,CAACW,YAAT,GAAwB;AACtBC,EAAAA,WAAW,EAAE;AADS,CAAxB;AAIAZ,QAAQ,CAACa,SAAT,GAAqB;AACnBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAEnBd,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MAAV,CAAiBC;AAFJ,CAArB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACkB,eAAD,EAAkB,EAAlB,CAAP,CAA6BhB,QAA7B,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteTest } from '../actions/test';\n\n// Make returned html pretty!\nconst TestItem = ({\n  auth,\n  test: { _id, title, result, user, comments, date, location },\n}) => (\n  <div>\n    <h2>{title}</h2>\n    <p>{result}</p>\n    <p>Tested on {date}, at {location}</p>\n    {comments.length > 0 && (<p>{comments}</p>)}\n    <a href='/' onClick={deleteTest}>Delete</a>\n  </div>\n);\n\nTestItem.defaultProps = {\n  showActions: true\n};\n\nTestItem.propTypes = {\n  test: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(TestItem);\n"]},"metadata":{},"sourceType":"module"}