{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Login/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport './login.css';\n\nconst SignUp = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = contact;\n\n  const update = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  }; // redirect when logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fill in with your details to make an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-signup\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup-input\",\n          onChange: update,\n          name: \"name\",\n          placeholder: \"Full name\",\n          value: name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup-input\",\n          onChange: update,\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup-input\",\n          type: \"password\",\n          onChange: update,\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup-input\",\n          type: \"password\",\n          onChange: update,\n          name: \"password2\",\n          placeholder: \"Confirm password\",\n          value: password2,\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignUp, \"qMYD5Jg2EF2dcOF4FvaHvj9e+Z0=\");\n\n_c = SignUp;\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/martamasramon/Documents/GitHub/Crescentech_client/src/Views/Login/SignUp.js"],"names":["React","useState","Redirect","connect","setAlert","register","PropTypes","SignUp","isAuthenticated","contact","setContact","name","email","password","password2","update","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport './login.css';\n\n\nconst SignUp = ({setAlert, register, isAuthenticated }) => {\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  const { name, email, password, password2 } = contact;\n\n  const update = (e) => setContact({\n    ...contact,[e.target.name]:e.target.value\n  });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if(password !== password2){\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else{\n      register({ name, email, password });\n    }\n  };\n\n  // redirect when logged in\n  if (isAuthenticated){\n    return <Redirect to = \"/\" />;\n  }\n\n  return (\n      <div className=\"signup\">\n\n        <h1>Fill in with your details to make an account</h1>\n\n        <div className=\"card card-signup\">\n          <form onSubmit={onSubmit}>\n            <input className=\"signup-input\"\n              onChange={update}\n              name=\"name\"\n              placeholder=\"Full name\"\n              value={name}\n              required\n            />\n            <input className=\"signup-input\"\n              onChange={update}\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              required\n            />\n            <input className=\"signup-input\"\n              type=\"password\"\n              onChange={update}\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              minLength='6'\n              required\n            />\n            <input className=\"signup-input\"\n            type=\"password\"\n              onChange={update}\n              name=\"password2\"\n              placeholder=\"Confirm password\"\n              value={password2}\n              minLength='6'\n              required\n            />\n            <input type=\"submit\" value=\"Sign up\" />\n          </form>\n        </div>\n\n        <p>Already have an account? <a href=\"/login\">Log in</a></p>\n      </div>\n\n  );\n\n};\n\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register:  PropTypes.func.isRequired,\n  isAuthenticated:  PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {setAlert, register})(SignUp);\n"]},"metadata":{},"sourceType":"module"}