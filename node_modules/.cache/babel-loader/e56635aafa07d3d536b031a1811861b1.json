{"ast":null,"code":"import _regeneratorRuntime from\"/Users/martamasramon/Documents/GitHub/Crescentech_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/martamasramon/Documents/GitHub/Crescentech_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';//import { setAlert } from './alert';\nimport{GET_TESTS,TEST_ERROR,DELETE_TEST}from'./types';// Get tests\nexport var getTests=function getTests(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/test');case 3:res=_context.sent;dispatch({type:GET_TESTS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:TEST_ERROR,payload:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Delete test\nexport var deleteTest=function deleteTest(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.delete(\"/api/test/\".concat(id));case 3:_context2.next=5;return window.location.reload(false);case 5:dispatch({type:DELETE_TEST,payload:id});//dispatch(setAlert('Test Removed', 'success'));\n_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);dispatch({type:TEST_ERROR,payload:{msg:_context2.t0.response.statusText,status:_context2.t0.response.status}});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/martamasramon/Documents/GitHub/Crescentech_client/src/actions/test.js"],"names":["axios","GET_TESTS","TEST_ERROR","DELETE_TEST","getTests","dispatch","get","res","type","payload","data","msg","response","statusText","status","deleteTest","id","delete","window","location","reload"],"mappings":"2VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OACEC,SADF,CAEEC,UAFF,CAGEC,WAHF,KAIO,SAJP,CAMA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAMC,QAAN,gKAERL,CAAAA,KAAK,CAACM,GAAN,CAAU,WAAV,CAFQ,QAEpBC,GAFoB,eAI1BF,QAAQ,CAAC,CACPG,IAAI,CAAEP,SADC,CAEPQ,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAJ0B,+EAU1BL,QAAQ,CAAC,CACPG,IAAI,CAAEN,UADC,CAEPO,OAAO,CAAE,CAAEE,GAAG,CAAE,YAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,YAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CAV0B,oEAAN,gEAAjB,CAiBP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,kGAAI,kBAAMX,QAAN,8JAEtBL,CAAAA,KAAK,CAACiB,MAAN,qBAA0BD,EAA1B,EAFsB,+BAGtBE,CAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,CAHsB,QAK5Bf,QAAQ,CAAC,CACPG,IAAI,CAAEL,WADC,CAEPM,OAAO,CAAEO,EAFF,CAAD,CAAR,CAKA;AAV4B,mFAY5BX,QAAQ,CAAC,CACPG,IAAI,CAAEN,UADC,CAEPO,OAAO,CAAE,CAAEE,GAAG,CAAE,aAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,aAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CAZ4B,sEAAJ,kEAArB","sourcesContent":["import axios from 'axios';\n//import { setAlert } from './alert';\nimport {\n  GET_TESTS,\n  TEST_ERROR,\n  DELETE_TEST,\n} from './types';\n\n// Get tests\nexport const getTests = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/test');\n\n    dispatch({\n      type: GET_TESTS,\n      payload: res.data\n    });\n\n  } catch (err) {\n    dispatch({\n      type: TEST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete test\nexport const deleteTest = id => async dispatch => {\n  try {\n    await axios.delete(`/api/test/${id}`);\n    await window.location.reload(false);\n\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n\n    //dispatch(setAlert('Test Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: TEST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}