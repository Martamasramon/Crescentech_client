{"ast":null,"code":"import _regeneratorRuntime from\"/Users/martamasramon/Desktop/Crescentech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/martamasramon/Desktop/Crescentech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{setAlert}from'./alert';import{GET_TESTS,GET_TEST,TEST_ERROR,DELETE_TEST,ADD_TEST}from'./types';// Get tests\nexport var getTests=function getTests(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/tests');case 3:res=_context.sent;dispatch({type:GET_TESTS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:TEST_ERROR,payload:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// // Delete test\n// export const deleteTest = id => async dispatch => {\n//   try {\n//     await axios.delete(`/tests/${id}`);\n//\n//     dispatch({\n//       type: DELETE_TEST,\n//       payload: id\n//     });\n//\n//     dispatch(setAlert('Test Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n//\n// // Add test\n// export const addTest = formData => async dispatch => {\n//   try {\n//     const res = await axios.test('/tests', formData);\n//\n//     dispatch({\n//       type: ADD_TEST,\n//       payload: res.data\n//     });\n//\n//     dispatch(setAlert('Test Created', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n//\n// // Get test\n// export const getTest = id => async dispatch => {\n//   try {\n//     const res = await axios.get(`/tests/${id}`);\n//\n//     dispatch({\n//       type: GET_TEST,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/martamasramon/Desktop/Crescentech/client/src/actions/test.js"],"names":["axios","setAlert","GET_TESTS","GET_TEST","TEST_ERROR","DELETE_TEST","ADD_TEST","getTests","dispatch","get","res","type","payload","data","msg","response","statusText","status"],"mappings":"yUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,SAAzB,CACA,OACEC,SADF,CAEEC,QAFF,CAGEC,UAHF,CAIEC,WAJF,CAKEC,QALF,KAMO,SANP,CAQA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAMC,QAAN,gKAERR,CAAAA,KAAK,CAACS,GAAN,CAAU,QAAV,CAFQ,QAEpBC,GAFoB,eAI1BF,QAAQ,CAAC,CACPG,IAAI,CAAET,SADC,CAEPU,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAJ0B,+EAU1BL,QAAQ,CAAC,CACPG,IAAI,CAAEP,UADC,CAEPQ,OAAO,CAAE,CAAEE,GAAG,CAAE,YAAIC,QAAJ,CAAaC,UAApB,CAAgCC,MAAM,CAAE,YAAIF,QAAJ,CAAaE,MAArD,CAFF,CAAD,CAAR,CAV0B,oEAAN,gEAAjB,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_TESTS,\n  GET_TEST,\n  TEST_ERROR,\n  DELETE_TEST,\n  ADD_TEST\n} from './types';\n\n// Get tests\nexport const getTests = () => async dispatch => {\n  try {\n    const res = await axios.get('/tests');\n\n    dispatch({\n      type: GET_TESTS,\n      payload: res.data\n    });\n\n  } catch (err) {\n    dispatch({\n      type: TEST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// // Delete test\n// export const deleteTest = id => async dispatch => {\n//   try {\n//     await axios.delete(`/tests/${id}`);\n//\n//     dispatch({\n//       type: DELETE_TEST,\n//       payload: id\n//     });\n//\n//     dispatch(setAlert('Test Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n//\n// // Add test\n// export const addTest = formData => async dispatch => {\n//   try {\n//     const res = await axios.test('/tests', formData);\n//\n//     dispatch({\n//       type: ADD_TEST,\n//       payload: res.data\n//     });\n//\n//     dispatch(setAlert('Test Created', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n//\n// // Get test\n// export const getTest = id => async dispatch => {\n//   try {\n//     const res = await axios.get(`/tests/${id}`);\n//\n//     dispatch({\n//       type: GET_TEST,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: TEST_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}